version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: codecrafts-db
    environment:
      POSTGRES_DB: codecrafts
      POSTGRES_USER: codecrafts_user
      POSTGRES_PASSWORD: codecrafts_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - codecrafts-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codecrafts_user -d codecrafts"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: codecrafts-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://codecrafts_user:codecrafts_password@db:5432/codecrafts
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JUDGE0_API_URL=https://judge0-ce.p.rapidapi.com
      - JUDGE0_API_KEY=your-judge0-api-key
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - codecrafts-network
    depends_on:
      db:
        condition: service_healthy
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: codecrafts-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - codecrafts-network
    depends_on:
      - backend
    stdin_open: true
    tty: true

networks:
  codecrafts-network:
    driver: bridge

volumes:
  postgres_data: